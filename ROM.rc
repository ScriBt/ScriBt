#========================= a7r3 - 2016 ==============================#
#                ROM Information Database aka RIDb                   #
#====================================================================#

function rom_names()
{
    case "$1" in
        1)
            ROM_NAME=( AICP );
            MAN=( platform_manifest.git );
            ROM_FN="AICP";
            ROMNIS="aicp";
            ;;
        2)
            ROM_NAME=( AOKP );
            MAN=( platform_manifest.git );
            ROM_FN="AOKP";
            ROMNIS="aokp";
            ;;
        3)
            ROM_NAME=( AOSIP );
            MAN=( platform_manifest.git );
            ROM_FN="AOSiP";
            ROMNIS="aosip";
            ;;
        4)
            ROM_NAME=( AOSP-CAF );
            MAN=( platform_manifest.git );
            ROM_FN="AOSP-CAF";
            ROMNIS="aosp";
            ;;
        5)
            ROM_NAME=( AOSP-RRO );
            MAN=( manifest.git );
            ROM_FN="AOSP-OMS";
            ROMNIS="aosp";
            ;;
        6)
            ROM_NAME=( BlissRoms );
            MAN=( platform_manifest.git );
            ROM_FN="BlissRoms";
            ROMNIS="bliss";
            ;;
        7)
            ROM_NAME=( CandyKat CandyRoms );
            MAN=( candykat.git candy.git );
            ROM_FN="CandyRoms";
            ROMNIS="candy";
            ;;
        8)
            ROM_NAME=( CarbonROM CarbonDev );
            MAN=( android.git android.git );
            ROM_FN="CarbonROM";
            ROMNIS="carbon";
            ;;
        9)
            ROM_NAME=( crdroidandroid );
            MAN=( android.git );
            ROM_FN="crDroid";
            ROMNIS="crdroid";
            ;;
        10)
            ROM_NAME=( CyanideL );
            MAN=( cyanide_manifest.git );
            ROM_FN="Cyanide";
            ROMNIS="cyanide";
            ;;
        11)
            ROM_NAME=( CyanogenMod );
            MAN=( android.git );
            ROM_FN="CyanogenMod";
            ROMNIS="cm";
            ;;
        12)
            ROM_NAME=( DirtyUnicorns );
            MAN=( android_manifest.git );
            ROM_FN="Dirty Unicorns";
            ROMNIS="du";
            ;;
        13)
            ROM_NAME=( FlayrOS );
            MAN=( manifest.git );
            ROM_FN="Flayr OS";
            ROMNIS="full";
            ROMV="flayr";
            ;;
        14)
            ROM_NAME=( Krexus-CAF );
            MAN=( manifest.git );
            ROM_FN="Krexus CAF";
            ROMNIS="krexus";
            ;;
        15)
            ROM_NAME=( Team-OctOS );
            MAN=( platform_manifest.git );
            ROM_FN="OctOs";
            ROMNIS="to";
            ;;
        16)
            ROM_NAME=( OmniROM );
            MAN=( manifest.git );
            ROM_FN="OmniROM";
            ROMNIS="omni";
            ;;
        17)
            ROM_NAME=( TeamOrion );
            MAN=( platform_manifest.git );
            ROM_FN="Orion OS";
            ROMNIS="orion";
            ;;
        18)
            ROM_NAME=( OwnROM );
            MAN=( manifest.git );
            ROM_FN="OwnROM";
            ROMNIS="ownrom";
            ;;
        19)
            ROM_NAME=( PAC-ROM );
            MAN=( pac-rom.git );
            ROM_FN="PAC ROM";
            ROMNIS="pac";
            ;;
        20)
            ROM_NAME=( AOSPA );
            MAN=( manifest.git );
            ROM_FN="Paranoid Android";
            ROMNIS="pa";
            ;;
        21)
            ROM_NAME=( ResurrectionRemix );
            MAN=( platform_manifest.git );
            ROM_FN="Resurrection Remix";
            ROMNIS="cm";
            ;;
        22)
            ROM_NAME=( SlimRoms );
            MAN=( platform_manifest.git );
            ROM_FN="SlimRoms";
            ROMNIS="slim";
            ;;
        23)
            ROM_NAME=( temasek );
            MAN=( android.git );
            ROM_FN="Temasek";
            ROMNIS="cm";
            ;;
        24)
            ROM_NAME=( Tesla-M TeslaRom-N );
            MAN=( manifest.git manifest.git );
            ROM_FN="GZR Tesla";
            ROMNIS="tesla";
            ;;
        25)
            ROM_NAME=( TipsyOs );
            MAN=( platform_manifest.git );
            ROM_FN="TipsyOs";
            ROMNIS="tipsy";
            ;;
        26)
            ROM_NAME=( TV-LP51 ValidusOs-M ValidusOs-N );
            MAN=( manifest.git manifest.git manifest.git );
            ROM_FN="GZR Validus";
            ROMNIS="validus";
            ;;
        27)
            ROM_NAME=( VanirAOSP );
            MAN=( platform_manifest.git );
            ROM_FN="VanirAOSP";
            ROMNIS="vanir";
            ;;
        28)
            ROM_NAME=( TeamHorizon );
            MAN=( platform_manifest.git );
            ROM_FN="XenonHD";
            ROMNIS="xenonhd";
            ;;
        29)
            ROM_NAME=( XOSP-Project );
            MAN=( platform_manifest.git );
            ROM_FN="XOSP";
            ROMNIS="xosp";
            ;;
        30)
            ROM_NAME=( Zephyr-Os );
            MAN=( manifest.git );
            ROM_FN="Zephyr-OS";
            ROMNIS="aosp";
            ROMV="zos";
            ;;
        *)
            if [ -z "$automate" ]; then
                echo -e "${LRED}Invalid Selection.${NONE} Going back."; rom_select;
            fi
            ;;
    esac
} # rom_names


function color_my_life()
{
    CLR_0=( BLK RED GRN ORG BLU PRP CYN LGR );
    CLR_1=( DGR LRD LGN YEL LBL PNK LCN WYT );
    for NO in 0 1; do
        CT=0; CLR="CLR_${NO}[*]";
        for COLOR in ${!CLR}; do
            export CL_${COLOR}="\033[${NO};3${CT}m"; ((CT++));
        done
    done
    NONE="\033[0m";
} # color_my_life

function gimme_info()
{
    if [ -z "$automate" ]; then
        case "$1" in
            "jobs") echo -e "${INF} Slow Speed? Recommended value - 1. Else your wish\n";;
            "fsync") echo -e "${INF} Overwrite Local Sources with Remote\n" ;;
            "ssync") echo -e "${INF} Checkout output will appear\n" ;;
            "syncrt") echo -e "${INF} If Enabled, syncs only the desired branch as specified in the manifest, instead of syncing all branches. Saves Space)\n" ;;
            "clnbun") echo -e "${INF} Works with AOSP repositories, Downloads a prepackaged bundle file instead of objects from the server (Less objects, better sync). Sync takes place faster coz Google!\n" ;;
            "refer") echo -e "${INF} If you have any ROM's source completely synced, giving this source a reference source, will avoid redownloading common projects, thus saving a lot of time\n" ;;
            "cldp") echo -e "${INF} If unset, Syncs the Entire commit history of any repo which is better for future syncs \n Unless you know what you're doing,${NONE} ${CL_LRD}Answer n${NONE}\n" ;;
            "device-type") echo -e "${INF} For Phones : If you don't find common_full_phone / common_mini_phone then leave this field blank\nBuildSystem would consider the Device as a Phone.\n" ;;
            "bootres")
                echo -e "
${INF} Among these Values - Select the one which is nearest or almost Equal to that of your Device
${INF} Resolutions which are available for a ROM is shown by it's name. All Res are available for PAC-5.1
${CL_PNK}240${NONE}x400
${CL_PNK}320${NONE}x480 (AOKP)
${CL_PNK}480${NONE}x800 and ${CL_PNK}480${NONE}x854 (AOKP & PA)
${CL_PNK}540${NONE}x960 (AOKP)
${CL_PNK}600${NONE}x1024
${CL_PNK}720${NONE}x1280 (AOKP & PA)
${CL_PNK}768${NONE}x1024 and ${CL_PNK}768${NONE}x1280 (AOKP)
${CL_PNK}800${NONE}x1280 (AOKP)
${CL_PNK}960${NONE}x540
${CL_PNK}1080${NONE}x1920 (AOKP & PA)
${CL_PNK}1200${NONE}x1920
${CL_PNK}1280${NONE}x800
${CL_PNK}1440${NONE}x2560 (PA)
${CL_PNK}1536${NONE}x2048
${CL_PNK}1600${NONE}x2560
${CL_PNK}1920${NONE}x1200
${CL_PNK}2560${NONE}x1600\n"
            ;;
        esac
    fi
} # gimme_info
